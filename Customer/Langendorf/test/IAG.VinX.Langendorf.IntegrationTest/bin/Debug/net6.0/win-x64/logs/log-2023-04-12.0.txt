2023-04-12 14:27:31.5893|INFO|IAG.IdentityServer.Startup.ConfigureIdentityServer|Registering identity-plugin IAG.IdentityServer.Plugin.AtlasMitarbeiter
2023-04-12 14:27:31.6415|INFO|IAG.IdentityServer.Startup.ConfigureIdentityServer|Registering identity-plugin IAG.IdentityServer.Plugin.AtlasAdresse
2023-04-12 14:27:31.6415|INFO|IAG.IdentityServer.Startup.ConfigureIdentityServer|Registering identity-plugin IAG.IdentityServer.Plugin.TestAtlasAdresse
2023-04-12 14:27:31.6415|INFO|IAG.IdentityServer.Startup.ConfigureIdentityServer|Registering identity-plugin IAG.IdentityServer.Plugin.UserDatabaseAuthentication
2023-04-12 14:27:32.7785|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Common.Job.VersionInventory
2023-04-12 14:27:32.8401|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Common.Job.MailSender
2023-04-12 14:27:32.8401|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Common.Job.TransmitFiles
2023-04-12 14:27:32.8401|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Common.Job.ExtractFiles
2023-04-12 14:27:32.8401|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Common.Job.AbaSyncJob
2023-04-12 14:27:32.8401|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin ProcessEngine.Job.Monitoring
2023-04-12 14:27:32.8554|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin ProcessEngine.Job.Cleanup
2023-04-12 14:27:32.8554|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.ReceiptScannerJob
2023-04-12 14:27:32.8554|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.ObsCatalogSyncer
2023-04-12 14:27:32.8554|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.ObsOrderConfirmer
2023-04-12 14:27:32.8554|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.ObsOrderSyncer
2023-04-12 14:27:32.8721|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.MoetHarvest.SalesReport
2023-04-12 14:27:32.8721|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.MoetHarvest.InventoryReport
2023-04-12 14:27:32.8721|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin Mobile.PictureSyncerJob
2023-04-12 14:27:32.8721|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin IAG.Mobile.AcceptInventoryJob
2023-04-12 14:27:32.8852|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin IAG.Mobile.CustomerExportTenantsToFile
2023-04-12 14:27:32.8852|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin IAG.Mobile.CustomerBaseData
2023-04-12 14:27:32.8852|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin IAG.Mobile.CustomerInventory
2023-04-12 14:27:32.8852|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin IAG.Mobile.IagSyncer
2023-04-12 14:27:32.8852|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.Feldschloesschen.DoOrder
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.Markant.DownloadProducts
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.GoDrink.DownloadMappings
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.GoDrink.DownloadProducts
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.UploadLiveSales
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.UploadSales
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.ReadOrderStatus
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.DoOrder
2023-04-12 14:27:32.9000|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.DownloadMappings
2023-04-12 14:27:32.9181|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.DownloadCampaigns
2023-04-12 14:27:32.9181|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink.DownloadProducts
2023-04-12 14:27:32.9181|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink Middleware.SendInvoices
2023-04-12 14:27:32.9181|INFO|IAG.ProcessEngine.Startup.ServerConfigureServices|Registering process-plugin VinX.Job.DigitalDrink Middleware.ImportOrders
2023-04-12 14:27:33.7579|INFO|IAG.Infrastructure.Startup.CoreServer.ServerConfigureServices|Registering core-plugin IAG.CoreServer.MobileAdmin
2023-04-12 14:27:33.7632|INFO|IAG.Infrastructure.Startup.CoreServer.ServerConfigureServices|Registering core-plugin IAG.CoreServer.GoDrink
2023-04-12 14:27:33.9291|DEBUG|IAG.ProcessEngine.Startup.ServiceLifetime|PE-services started
2023-04-12 14:27:34.1235|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL '
                SET TEMPORARY OPTION CONNECTION_AUTHENTICATION=
                'Company=Opus Software AG;Application=Atlas Framework;Signature=000fa55157edb8e14d818eb4fe3db41447146f1571g7b927fa0b2d30a756f0d29b8fd5e7a1b91124be6''
2023-04-12 14:27:34.1514|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL '
                        SELECT Sys_Version, Sys_Languages FROM xStateSystem WHERE Sys_Tag = 'Main';
                        SELECT COUNT(1) FROM SYS.SYSCATALOG WHERE SYS.SYSCATALOG.tabletype = 'TABLE' AND SYS.SYSCATALOG.tname = 'BEREICH';
                        SELECT Mit_Id FROM Mitarbeiter WHERE Mit_Login = 'Support';
                        SELECT Sys_Tag FROM xStateSystem WHERE Sys_Tag IN ('Online','DigitalDrink')'
2023-04-12 14:27:34.2253|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL '
                WITH AtlasResourceBase (
                    Name, Language, Translation
                ) AS (
                SELECT PhysMetaAtt_NameInDB, 'de', PhysMetaAtt_NameForUser
                FROM PhysMetaAttribute       
                WHERE TRIM(ISNULL(PhysMetaAtt_NameInDB, '')) != '' 
                ),
                AtlasResource (
                    Name, Language, Translation, RowNum
                ) AS (
                SELECT 
                    'Atlas.' + Name, Language, Translation, 
                    ROW_NUMBER() over (partition by Name, Language order by Name, Language)
                FROM AtlasResourceBase
                WHERE Translation IS NOT NULL
                )
                SELECT DISTINCT Name, Language, Translation 
                FROM AtlasResource 
                WHERE RowNum = 1 
                ORDER BY Name'
2023-04-12 14:27:34.2953|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'SELECT TOP ? T.Provider_Id,T.Provider_URL,T.Provider_Bezeichnung,T.Provider_TeilnehmerNr,T.Provider_Login,T.Provider_Passwort,T.Provider_ProviderId,T.Provider_Typ
FROM Provider T
WHERE (((T.Provider_Typ)=(?)))
' with parameters: 1,Bpe
2023-04-12 14:27:34.3401|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'SELECT TOP ? T.Provider_Id,T.Provider_URL,T.Provider_Bezeichnung,T.Provider_TeilnehmerNr,T.Provider_Login,T.Provider_Passwort,T.Provider_ProviderId,T.Provider_Typ
FROM Provider T
WHERE (((T.Provider_Typ)=?))
' with parameters: 1,100
2023-04-12 14:27:34.3622|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'UPDATE Provider
SET Provider_URL=?,Provider_Bezeichnung=?,Provider_TeilnehmerNr=?,Provider_Login=?,Provider_Passwort=?,Provider_ProviderId=?,Provider_Typ=?
WHERE Provider_Id=?' with parameters: "https://www.digitaldrink-online.ch/b2b-digitaldrink-dataservice/","DigitalDrink","4399902355445","Langendorf",")Y4?dGYc",3,Platform,1
2023-04-12 14:27:34.3789|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'SELECT TOP ? T.Provider_Id,T.Provider_URL,T.Provider_Bezeichnung,T.Provider_TeilnehmerNr,T.Provider_Login,T.Provider_Passwort,T.Provider_ProviderId,T.Provider_Typ
FROM Provider T
WHERE (((T.Provider_Typ)=(?)))
' with parameters: 1,WoD
2023-04-12 14:27:34.3963|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'SELECT TOP ? T.Provider_Id,T.Provider_URL,T.Provider_Bezeichnung,T.Provider_TeilnehmerNr,T.Provider_Login,T.Provider_Passwort,T.Provider_ProviderId,T.Provider_Typ
FROM Provider T
WHERE (((T.Provider_Typ)=(?)))
' with parameters: 1,Ebill
2023-04-12 14:27:34.4176|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL 'SELECT TOP ? T.Provider_Id,T.Provider_URL,T.Provider_Bezeichnung,T.Provider_TeilnehmerNr,T.Provider_Login,T.Provider_Passwort,T.Provider_ProviderId,T.Provider_Typ
FROM Provider T
WHERE (((T.Provider_Typ)=(?)))
' with parameters: 1,Shop
2023-04-12 14:28:16.5317|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000002' to 'http://localhost:8085/swagger/index.html with 0 bytes of data of type Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Upgrade-Insecure-Requests: 1
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document

2023-04-12 14:28:16.6389|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000002'OK' (200)
Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/App/swagger.json","name":"I-AG App API"},{"url":"/swagger/Base/swagger.json","name":"I-AG Base API"},{"url":"/swagger/Shopv10/swagger.json","name":"I-AG Standard Shop API 1.0"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>


2023-04-12 14:28:16.8390|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000003' to 'http://localhost:8085/swagger/App/swagger.json with 0 bytes of data of type Accept: application/json,*/*
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Referer: http://localhost:8085/swagger/index.html
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty

2023-04-12 14:28:17.1929|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000003'OK' (200)
Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "I-AG App API",
    "description": "I-AG API for the App",
    "version": "1.0"
  },
  "paths": {
    "/api/Core/VinX/Mobile/VinX/Article": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/DatabaseInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/Division": {
      "get": {
        "tags": [
          "Core"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/InventoryData": {
      "post": {
        "tags": [
          "Core"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaData": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaHeader": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaUse": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/PackageUnit": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/RequestToken": {
      "post": {
        "tags": [
          "Core"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/StorageLocation": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/StoragePlace": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/User": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ContentDescription": {
            "type": "string",
            "nullable": true
          },
          "Producer": {
            "type": "string",
            "nullable": true
          },
          "Vintage": {
            "type": "string",
            "nullable": true
          },
          "FullTextSearch": {
            "type": "string",
            "nullable": true
          },
          "LotMandatory": {
            "type": "integer",
            "format": "int32"
          },
          "ScanningMandatory": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ArticleType": {
            "$ref": "#/components/schemas/ArticleTypeAppEnum"
          },
          "InfoShort1": {
            "type": "string",
            "nullable": true
          },
          "InfoShort2": {
            "type": "string",
            "nullable": true
          },
          "InfoShort3": {
            "type": "string",
            "nullable": true
          },
          "InfoLong1": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ArticleTypeAppEnum": {
        "enum": [
          "Package",
          "General"
        ],
        "type": "string"
      },
      "DatabaseInfo": {
        "type": "object",
        "properties": {
          "CurrentDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Division": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryData": {
        "type": "object",
        "properties": {
          "ArticleId": {
            "type": "string",
            "format": "uuid"
          },
          "StoragePlaceId": {
            "type": "string",
            "format": "uuid"
          },
          "PackageId": {
            "type": "string",
            "format": "uuid"
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "BatchId": {
            "type": "string",
            "format": "uuid"
          },
          "Lot": {
            "type": "string",
            "nullable": true
          },
          "TimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "Level": {
            "type": "integer",
            "format": "int32"
          },
          "LevelFactor": {
            "type": "integer",
            "format": "int32"
          },
          "PackageCount": {
            "type": "integer",
            "format": "int32"
          },
          "BaseUnitCount": {
            "type": "integer",
            "format": "int32"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MediaHeader": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Hash": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MediaUse": {
        "type": "object",
        "properties": {
          "MediaId": {
            "type": "string",
            "format": "uuid"
          },
          "UseIdId": {
            "type": "string",
            "format": "uuid"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PackageUnit": {
        "type": "object",
        "properties": {
          "ArticleId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "NbUnits": {
            "type": "integer",
            "format": "int32"
          },
          "Level": {
            "type": "integer",
            "format": "int32"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "userLanguage": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userShouldChangePassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SimpleRequestTokenParameter": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StorageLocation": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StoragePlace": {
        "type": "object",
        "properties": {
          "StorageLocationId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "NameLocation": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "Login": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}

2023-04-12 14:28:20.2709|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000004' to 'http://localhost:8085/swagger/Shopv10/swagger.json with 0 bytes of data of type Accept: application/json,*/*
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Referer: http://localhost:8085/swagger/index.html?urls.primaryName=I-AG%20Standard%20Shop%20API%201.0
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty

2023-04-12 14:28:20.9886|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000004'OK' (200)
Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "I-AG Standard Shop API 1.0",
    "description": "I-AG Standard Shop API Version 1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/v1.0/Core/VinX/Shop/BaseData/Address": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the addresses",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Address({id})/ChangeShopUsername": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "change shop username for an specified address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the address",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new shop username",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Article": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the categories of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ArticleCategory": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the categories of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ArticleSelectionCode": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selection codes of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Classification": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the classifications",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Country": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the countries",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/CustomerCategory": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the customer categories",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DeliveryCondition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the delivery conditions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DiscountGroupArticleCustomer": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the discount groups of the articles for customer discounts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Document({id})": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get a document by it's id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DocumentInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the document infos",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ECommerceGroup": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the e-commerce groups of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Filling": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the fillings of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Grape": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the grapes",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PaymentCondition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the payment conditions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PaymentMeans": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the means of payment",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PriceGroup": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the price groups",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Producer": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the producers",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ProductCycle": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the product cycles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Rating": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the ratings",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Receipt": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the receipts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ReceiptType": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the receipt types",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Region": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the countries",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Salutation": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the salutations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SelectionCode": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selection codes",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SellingPrices": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selling prices",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SellingSet": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selling sets",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/TradingUnit": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the trading units",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Warehouse": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the warehouse infos",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Wine": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wines",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/WineComposition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wine compositions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/WineRating": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wine ratings",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseDataLad/ArticleLad": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/OrderProposal": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the order history positions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/ProductInfo": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "get the product details according to the query parameters",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/StockInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the stock data",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/StockLocationInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the stock location info",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/Basket": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "send a new basket",
        "description": "send a new basket. Control with 'action' whether to calculate only or to order. return is always the calculated basket with all relevant attributes.",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/OnlineAddress": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "send new online address",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/OnlineAddress({id})": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get an online addresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key, Adr_ID",
            "format": "int32"
          },
          "addressNumber": {
            "type": "number",
            "description": "Address number, Adr_Adressnummer",
            "format": "double",
            "nullable": true
          },
          "priceGroupId": {
            "type": "integer",
            "description": "FK, ID of the price group, Adr_KGrpPreisID",
            "format": "int32",
            "nullable": true
          },
          "salesRepresentativeId": {
            "type": "integer",
            "description": "FK, ID of the sales representative, Adr_VertrID",
            "format": "int32",
            "nullable": true
          },
          "selectionCodeId": {
            "type": "integer",
            "description": "FK, ID of the selection, Adr_SortimentID",
            "format": "int32",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Adr_Suchbegriff",
            "nullable": true
          },
          "salutationId": {
            "type": "integer",
            "description": "FK, ID of salutation, Adr_AnrID",
            "format": "int32",
            "nullable": true
          },
          "letterSalutation": {
            "type": "string",
            "description": "Letter salutation, Adr_Briefanrede",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title, Adr_Titel",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name, Adr_Vorname",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Last name, Adr_Name",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Company name, Adr_Firma",
            "nullable": true
          },
          "companyAdditionalName": {
            "type": "string",
            "description": "Company additional name, Adr_Firmenzusatz",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZIP code",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country",
            "format": "int32",
            "nullable": true
          },
          "additionalLine1": {
            "type": "string",
            "description": "Additional address line 1",
            "nullable": true
          },
          "additionalLine2": {
            "type": "string",
            "description": "Additional address line 2",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "bonusRevenue": {
            "type": "integer",
            "description": "Bonus revenue",
            "format": "int32",
            "nullable": true
          },
          "customerCategoryId": {
            "type": "integer",
            "description": "FK, ID of customer category",
            "format": "int32",
            "nullable": true
          },
          "deliveryConditionId": {
            "type": "integer",
            "description": "FK, ID of delivery condition",
            "format": "int32",
            "nullable": true
          },
          "paymentConditionId": {
            "type": "integer",
            "description": "FK, ID of payment condition",
            "format": "int32",
            "nullable": true
          },
          "billingAddressId": {
            "type": "integer",
            "description": "FK, ID of billing address",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "description": "E-mail address",
            "nullable": true
          },
          "phoneDirect": {
            "type": "string",
            "description": "Phone number direct",
            "nullable": true
          },
          "phoneBusiness": {
            "type": "string",
            "description": "Phone number business",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "description": "Phone number private",
            "nullable": true
          },
          "faxBusiness": {
            "type": "string",
            "description": "Fax number business",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "shopUsername": {
            "type": "string",
            "description": "Shop username",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "birthday": {
            "type": "string",
            "description": "Birthday, Adr_Geburtsdatum",
            "format": "date-time",
            "nullable": true
          },
          "promotionAllowed": {
            "type": "boolean",
            "description": "Promotions are allowed, Adr_Aktionsberechtigung = 10"
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Addresses, table \"Adresse\""
      },
      "AddressChangeParam": {
        "type": "object",
        "properties": {
          "shopUsername": {
            "type": "string",
            "description": "new shop username",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Parameter for changing a shop username"
      },
      "AddressChangeTypeV10": {
        "enum": [
          "new",
          "change",
          "nop"
        ],
        "type": "string",
        "description": "action to perform: create new address or change existing"
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Art_Bezeichnung",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Art_Suchbegriff",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number, Art_Artikelnummer",
            "nullable": true
          },
          "articleCategoryId": {
            "type": "integer",
            "description": "ID of article category, Art_AKatID",
            "format": "int32",
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/ArticleCategoryKindV10"
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "ID of filling, Art_AbfID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "ID of trading unit, Art_GrossID",
            "format": "int32",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage), MWST_Prozent",
            "format": "double"
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country, Art_LandID",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "description": "ID of the region, Art_RegionId",
            "format": "int32",
            "nullable": true
          },
          "productCycleId": {
            "type": "integer",
            "description": "ID of the product cycle, Art_ZyklusId",
            "format": "int32",
            "nullable": true
          },
          "producerId": {
            "type": "integer",
            "description": "ID of the producer, Art_ProduzentID",
            "format": "int32",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, Art_Jahrgang",
            "format": "int32",
            "nullable": true
          },
          "wineId": {
            "type": "integer",
            "description": "ID of wine, Art_WeininfoID",
            "format": "int32",
            "nullable": true
          },
          "volume": {
            "type": "number",
            "description": "Percentage per volume alcohol, Art_Volumen",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "withStock": {
            "type": "boolean",
            "description": "Article is inventory managed"
          },
          "eCommerceGroupId": {
            "type": "integer",
            "description": "ID of e-commerce group, Art_EGruppeID",
            "format": "int32",
            "nullable": true
          },
          "priceUnit": {
            "type": "number",
            "description": "Price unit, Art_Preiseinheit",
            "format": "double",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "description": "Base price, Art_Grundpreis",
            "format": "double",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          },
          "substituteArticleId": {
            "type": "integer",
            "description": "ID of substitute article,Art_ErsatzArtikelID",
            "format": "int32",
            "nullable": true
          },
          "substituteArticleText": {
            "type": "string",
            "description": "Additional text of the substitute article, Art_ErsatzArtikelText",
            "nullable": true
          },
          "picturePathLocal": {
            "type": "string",
            "description": "Picture local path, Art_BildDatei",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Weight / Art_Gewichtsanteil",
            "format": "double",
            "nullable": true
          },
          "ean1": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean2": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean3": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Articles"
      },
      "ArticleCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Categories of the articles"
      },
      "ArticleCategoryKindV10": {
        "enum": [
          "wine",
          "mineral",
          "beer",
          "spirits",
          "fruits",
          "diverse",
          "food",
          "nonFood",
          "tax",
          "set",
          "service",
          "expense",
          "fee"
        ],
        "type": "string",
        "description": "Kind of article category"
      },
      "ArticleLad": {
        "type": "object",
        "properties": {
          "contentInfo": {
            "type": "string",
            "nullable": true
          },
          "nutritionInfo": {
            "type": "string",
            "nullable": true
          },
          "allergenInfo": {
            "type": "string",
            "nullable": true
          },
          "noNutritionInfo": {
            "type": "boolean",
            "nullable": true
          },
          "articleInfo": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Art_Bezeichnung",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Art_Suchbegriff",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number, Art_Artikelnummer",
            "nullable": true
          },
          "articleCategoryId": {
            "type": "integer",
            "description": "ID of article category, Art_AKatID",
            "format": "int32",
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/ArticleCategoryKindV10"
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "ID of filling, Art_AbfID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "ID of trading unit, Art_GrossID",
            "format": "int32",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage), MWST_Prozent",
            "format": "double"
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country, Art_LandID",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "description": "ID of the region, Art_RegionId",
            "format": "int32",
            "nullable": true
          },
          "productCycleId": {
            "type": "integer",
            "description": "ID of the product cycle, Art_ZyklusId",
            "format": "int32",
            "nullable": true
          },
          "producerId": {
            "type": "integer",
            "description": "ID of the producer, Art_ProduzentID",
            "format": "int32",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, Art_Jahrgang",
            "format": "int32",
            "nullable": true
          },
          "wineId": {
            "type": "integer",
            "description": "ID of wine, Art_WeininfoID",
            "format": "int32",
            "nullable": true
          },
          "volume": {
            "type": "number",
            "description": "Percentage per volume alcohol, Art_Volumen",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "withStock": {
            "type": "boolean",
            "description": "Article is inventory managed"
          },
          "eCommerceGroupId": {
            "type": "integer",
            "description": "ID of e-commerce group, Art_EGruppeID",
            "format": "int32",
            "nullable": true
          },
          "priceUnit": {
            "type": "number",
            "description": "Price unit, Art_Preiseinheit",
            "format": "double",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "description": "Base price, Art_Grundpreis",
            "format": "double",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          },
          "substituteArticleId": {
            "type": "integer",
            "description": "ID of substitute article,Art_ErsatzArtikelID",
            "format": "int32",
            "nullable": true
          },
          "substituteArticleText": {
            "type": "string",
            "description": "Additional text of the substitute article, Art_ErsatzArtikelText",
            "nullable": true
          },
          "picturePathLocal": {
            "type": "string",
            "description": "Picture local path, Art_BildDatei",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Weight / Art_Gewichtsanteil",
            "format": "double",
            "nullable": true
          },
          "ean1": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean2": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean3": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArticleParameter": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "List of article - quantity pairs to calculate the price"
      },
      "ArticleSelectionCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "FK, id of the article",
            "format": "int32"
          },
          "selectionId": {
            "type": "integer",
            "description": "FK, id of the selectionCode",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Selection codes of the articles"
      },
      "Basket": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/BasketActionTypeV10"
          },
          "Id": {
            "type": "integer",
            "description": "id of the stored basket in VinX, if action = order, output",
            "format": "int32",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "arbitrary id attributed by the shop, input, optional",
            "nullable": true
          },
          "divisionId": {
            "type": "integer",
            "description": "id of the division to calculate the prices for, input, optional",
            "format": "int32",
            "nullable": true
          },
          "orderText": {
            "type": "string",
            "description": "free text to the order / Best_Hinweis",
            "nullable": true
          },
          "customerWithVat": {
            "type": "boolean",
            "description": "Prices are to show with VAT, output"
          },
          "conditionAddressId": {
            "type": "integer",
            "description": "id of the condition address. Required to determine the price conditions if no address-Ids are transmitted",
            "format": "int32",
            "nullable": true
          },
          "orderingAddressId": {
            "type": "integer",
            "description": "id of the ordering address. Required if no online address is transmitted",
            "format": "int32",
            "nullable": true
          },
          "billingAddressId": {
            "type": "integer",
            "description": "id of the billing address, input, optional",
            "format": "int32",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "integer",
            "description": "id of the delivery address, input, optional",
            "format": "int32",
            "nullable": true
          },
          "orderingOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "billingOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "deliveryOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "paymentConditionId": {
            "type": "integer",
            "description": "id of the payment condition, reference to /paymentCondition, input, required",
            "format": "int32",
            "nullable": true
          },
          "deliveryConditionId": {
            "type": "integer",
            "description": "id of the delivery condition, reference to /deliveryCondition, input, required",
            "format": "int32"
          },
          "amountPayed": {
            "type": "number",
            "description": "in the shop payed amount, input",
            "format": "double"
          },
          "validDate": {
            "type": "string",
            "description": "Date for the price calculation, default = today",
            "format": "date-time"
          },
          "deliveryDateRequested": {
            "type": "string",
            "description": "requested delivery date by the customer, default = today / Best_Lieferdatum",
            "format": "date-time"
          },
          "paymentMeansId": {
            "type": "integer",
            "description": "FK, id means of payment, input, optional",
            "format": "int32",
            "nullable": true
          },
          "saferPayId": {
            "type": "string",
            "description": "saferpay id, input",
            "nullable": true
          },
          "saferPayToken": {
            "type": "string",
            "description": "saferpay token id, input",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "payment terms, output",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "description": "id of the provider for this order, input, optional",
            "format": "int32",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketPosition"
            },
            "description": "list of the positions of the basket",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargePosition"
            },
            "description": "list of the charges of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPosition"
            },
            "description": "list of the discounts of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagePosition"
            },
            "description": "list of the packages of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "vatSummations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatSummation"
            },
            "description": "vat summation, output",
            "nullable": true
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order positions, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "chargeTotalAmount": {
            "type": "number",
            "description": "total amount charges, output",
            "format": "double"
          },
          "discountTotalAmount": {
            "type": "number",
            "description": "total amount discounts, output",
            "format": "double"
          },
          "packagesTotalAmount": {
            "type": "number",
            "description": "total amount packages, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "roundingAmount": {
            "type": "number",
            "description": "rounding amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "header information of the basket"
      },
      "BasketActionTypeV10": {
        "enum": [
          "calculate",
          "order"
        ],
        "type": "string",
        "description": "action to perform, calculate only or treat as order, input, required"
      },
      "BasketPosition": {
        "type": "object",
        "properties": {
          "stockQuantity": {
            "type": "number",
            "description": "available quantity in stock",
            "format": "double"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargePosition"
            },
            "description": "list of the charges of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPosition"
            },
            "description": "list of the discounts of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagePosition"
            },
            "description": "list of the packages of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "chargeTotalAmount": {
            "type": "number",
            "description": "total amount charges, output",
            "format": "double"
          },
          "discountTotalAmount": {
            "type": "number",
            "description": "total amount discounts, output",
            "format": "double"
          },
          "packagesTotalAmount": {
            "type": "number",
            "description": "total amount packages, output",
            "format": "double"
          },
          "isNetto": {
            "type": "boolean",
            "description": "netto-flag after calculation, output"
          },
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "order position of the basket"
      },
      "ChargePosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "charge, all output and always calculated by VinX"
      },
      "Classification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Classifications"
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sort order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Countries"
      },
      "CustomerCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "costCenterId": {
            "type": "integer",
            "description": "ID of cost center",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Customer categories"
      },
      "DeliveryCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, Liefbed_Bezeichnung",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Delivery conditions, Lieferbedingung"
      },
      "DiscountGroupArticleCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Discount groups of the articles for customer discounts / ArtikelgruppeRabatt"
      },
      "DiscountPosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "discount, all output and calculated by VinX"
      },
      "DocumentInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id of the document, can be read by a coll to /document(id)",
            "format": "int32"
          },
          "receiptId": {
            "type": "integer",
            "description": "FK, id of the receipt",
            "format": "int32"
          },
          "addressId": {
            "type": "integer",
            "description": "FK, id of the address the document belongs to",
            "format": "int32"
          },
          "documentDescription": {
            "type": "string",
            "description": "Name/description of the document",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Documents"
      },
      "ECommerceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "Id of the parent group, can be empty",
            "format": "int32",
            "nullable": true
          },
          "sortKey": {
            "type": "string",
            "description": "Optional sorting key",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "E-commerce grouping of the articles"
      },
      "Filling": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation, Abf_BezeichnungWeb",
            "nullable": true
          },
          "shortNameWeb": {
            "type": "string",
            "description": "Short name web, Abf_KuerzelWeb",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "description": "Short name, Abf_Kuerzel",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Abf_Suchbegriff",
            "nullable": true
          },
          "contentInCl": {
            "type": "number",
            "description": "Content in centiliters, Abf_InhaltInCl",
            "format": "double"
          },
          "isChargeable": {
            "type": "boolean",
            "description": "Chargeable, Abf_Verrechenbar"
          },
          "articleId ": {
            "type": "integer",
            "description": "ID of the filling article, Abf_ArtID",
            "format": "int32"
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Fillings of the articles, Abfuellung"
      },
      "Grape": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "characteristicRtf": {
            "type": "string",
            "description": "Characteristic in Rtf",
            "nullable": true
          },
          "characteristic": {
            "type": "string",
            "description": "Characteristic",
            "nullable": true,
            "readOnly": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Grapes, Traubensorte"
      },
      "Lager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "designation, Lag_Bezeichnung",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineAddress": {
        "type": "object",
        "properties": {
          "changeType": {
            "$ref": "#/components/schemas/AddressChangeTypeV10"
          },
          "id": {
            "type": "integer",
            "description": "id in VinX",
            "format": "int32",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "address-id in VinX, only for type [change]",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "title / Adr_Titel",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "first name / Adr_Vorname",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "last name / Adr_Name",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "email / Adr_Email",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "description": "homepage / Adr_Homepage",
            "nullable": true
          },
          "salutationId": {
            "type": "integer",
            "description": "salutation id (must be known in the shop) / Adr_AnrID",
            "format": "int32",
            "nullable": true
          },
          "phoneDirect": {
            "type": "string",
            "description": "Phone number direct",
            "nullable": true
          },
          "phoneBusiness": {
            "type": "string",
            "description": "Phone number business",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "description": "Phone number private",
            "nullable": true
          },
          "faxBusiness": {
            "type": "string",
            "description": "Fax number business",
            "nullable": true
          },
          "phoneMobile": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "additional adress line 1 / Adr_Zusatz1",
            "nullable": true
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "additional adress line 2 / Adr_Zusatz2",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "description": "zip code / Adr_Plz",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "city / Adr_Ort",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "street / Adr_Strasse",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "country / Land_Code",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "language-code / Adr_Sprache",
            "nullable": true
          },
          "loginName": {
            "type": "string",
            "description": "login name, must be unique over all addresses and contacts / Adr_OnlineBenutzername",
            "nullable": true
          },
          "onlineActive": {
            "type": "boolean",
            "description": "online active, default = true / Adr_OnlineAktiv"
          },
          "divisionId": {
            "type": "integer",
            "description": "id of the division, input, optional",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "data structure to transmit new addresses and changes"
      },
      "OrderPositionTypeV10": {
        "enum": [
          "orderPos",
          "discount",
          "charge",
          "shipping",
          "package",
          "fee"
        ],
        "type": "string",
        "description": "kind of orderPosition, 'orderPos' is the only one treated as in input from the shop, the rest are calculated positions"
      },
      "OrderProposal": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "FK, Id of the article",
            "format": "int32"
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number",
            "nullable": true
          },
          "categoryDesignation": {
            "type": "string",
            "description": "Designation of the article category",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "FK, Id of the address",
            "format": "int32"
          },
          "onlineUserName": {
            "type": "string",
            "description": "Online user name",
            "nullable": true
          },
          "quantityOrdered": {
            "type": "number",
            "description": "Quantity of the products",
            "format": "double",
            "nullable": true
          },
          "numberOfOrders": {
            "type": "integer",
            "description": "Number of orders",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ratings"
      },
      "PackagePosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "package position of the basket"
      },
      "PaymentCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, Zahlkond_OnlineBezeichnung or Zahlkond_Kurzbezeichnung",
            "nullable": true
          },
          "cashDiscountDays": {
            "type": "integer",
            "description": "Cash discount days, Zahlkond_TageSkonto",
            "format": "int32",
            "nullable": true
          },
          "cashDiscountPercentage": {
            "type": "number",
            "description": "Cash discount percentage, Zahlkond_ProzentSkonto",
            "format": "double",
            "nullable": true
          },
          "paymentDays": {
            "type": "integer",
            "description": "Payment days, Zahlkond_TageNetto",
            "format": "int32"
          },
          "paymentTerms": {
            "type": "string",
            "description": "Payment terms, Zahlkond_BezeichnungNetto",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Condition is avtive, Zahlkond_Aktiv"
          }
        },
        "additionalProperties": false,
        "description": "payment conditions, filtered to online active = true"
      },
      "PaymentMeans": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, ZahWeg_Bezeichnung",
            "nullable": true
          },
          "paymentMeansKind": {
            "$ref": "#/components/schemas/PaymentMeansKindV10"
          }
        },
        "additionalProperties": false,
        "description": "means of payment, filtered to active = true"
      },
      "PaymentMeansKindV10": {
        "enum": [
          "other",
          "creditCard"
        ],
        "type": "string"
      },
      "PriceCalculationKindV10": {
        "enum": [
          "customer",
          "promotion",
          "priceGroup",
          "article",
          "override",
          "fromShop",
          "notFound"
        ],
        "type": "string"
      },
      "PriceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "fallbackId": {
            "type": "integer",
            "description": "Id of the fallback price group, KundPreis_ErsatzKGrpPreisID",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, KundPreis_Bezeichnung",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Is active, KundPreis_Aktiv"
          },
          "pricesWithVat": {
            "type": "boolean",
            "description": "Prices with VAT, KundPreis_InklMWST"
          }
        },
        "additionalProperties": false,
        "description": "Price groups, KundengruppePreis"
      },
      "PriceParameter": {
        "type": "object",
        "properties": {
          "validDate": {
            "type": "string",
            "description": "Date of the price calculation, defaults to current date",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "description": "Id of the customer address, either this or priceGroupId must be set",
            "format": "int32",
            "nullable": true
          },
          "priceGroupId": {
            "type": "integer",
            "description": "id of the price group, either this or addressId must be set\r\nprices for price groups include promotion prices, although these might not be valid for a certain customer!",
            "format": "int32",
            "nullable": true
          },
          "articleParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Parameter for batch calculation of prices. If CustomerId ist set, PriceGroupId is ignored."
      },
      "Producer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "addressId": {
            "type": "integer",
            "description": "Id of the address of the producer",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Prod_Bezeichnung",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description, Prod_Text",
            "nullable": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          },
          "website": {
            "type": "string",
            "description": "Website",
            "nullable": true
          },
          "inhouseProduction": {
            "type": "boolean",
            "description": "In-house production, Prod_EigenProduktion"
          }
        },
        "additionalProperties": false,
        "description": "Producers"
      },
      "ProductCycle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Is active"
          }
        },
        "additionalProperties": false,
        "description": "Product cycles of the articles"
      },
      "ProductInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "priceGroupId": {
            "type": "integer",
            "description": "id of the price group",
            "format": "int32",
            "nullable": true
          },
          "stock": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "description": "quantity in base units of the article",
            "format": "double"
          },
          "price": {
            "type": "number",
            "description": "price excl VAT for the article in the context of the query parameters, but not promotion",
            "format": "double",
            "nullable": true
          },
          "pricePromotion": {
            "type": "number",
            "description": "price excl VAT for the article in the context of the query parameters for promotions",
            "format": "double",
            "nullable": true
          },
          "promotionText": {
            "type": "string",
            "description": "Description of the promition",
            "nullable": true
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent",
            "format": "double"
          },
          "isNetto": {
            "type": "boolean",
            "description": "netto-flag after calculation, output"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInfoDiscount"
            },
            "description": "applicable discounts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "detail of a product in the context of a customer and / or price group"
      },
      "ProductInfoDiscount": {
        "type": "object",
        "properties": {
          "customerDiscountGroupId": {
            "type": "integer",
            "description": "FK, id of the discount group of the customer",
            "format": "int32"
          },
          "articleDiscountGroupId": {
            "type": "integer",
            "description": "FK, id of the discount group of the article",
            "format": "int32"
          },
          "discount": {
            "type": "number",
            "description": "discount excl VAT",
            "format": "double"
          },
          "discountText": {
            "type": "string",
            "description": "Description of the discount",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "detail of a product discount in the context of a customer"
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "minimalRating": {
            "type": "integer",
            "description": "Minimal rating",
            "format": "int32",
            "nullable": true
          },
          "maximalRating": {
            "type": "integer",
            "description": "Maximal rating",
            "format": "int32",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Unit",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ratings"
      },
      "Receipt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "receiptNumber": {
            "type": "integer",
            "description": "Receipt number",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "description": "Order number",
            "format": "int32",
            "nullable": true
          },
          "deliveryNoteNumber": {
            "type": "integer",
            "description": "Delivery note number",
            "format": "int32",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "integer",
            "description": "Invoice number",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation, Bel_DatumErfassung",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "description": "Date of the order, Bel_BestellDatum",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Due date of thhe invoice, Bel_FaelligkeitNetto",
            "format": "date-time",
            "nullable": true
          },
          "receiptDate": {
            "type": "string",
            "description": "Date on receipt, Bel_Datum",
            "format": "date-time",
            "nullable": true
          },
          "deliveryNoteDate": {
            "type": "string",
            "description": "Date on delivery note, Bel_DatumLS",
            "format": "date-time",
            "nullable": true
          },
          "pricingDate": {
            "type": "string",
            "description": "Date of pricing, Bel_DatumPreise",
            "format": "date-time",
            "nullable": true
          },
          "invoicingDate": {
            "type": "string",
            "description": "Date on invoice, Bel_DatumRE",
            "format": "date-time",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "FK, ID of address",
            "format": "int32",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "integer",
            "description": "ID of delivery address",
            "format": "int32",
            "nullable": true
          },
          "totalNet": {
            "type": "number",
            "description": "Total net, Bel_GesamtNetto",
            "format": "double",
            "nullable": true
          },
          "totalGoods": {
            "type": "number",
            "description": "Total goods, Bel_ArtikelTotal",
            "format": "double",
            "nullable": true
          },
          "totalContainer": {
            "type": "number",
            "description": "Total of the containers, Bel_GebindeTotal",
            "format": "double",
            "nullable": true
          },
          "totalDiscount": {
            "type": "number",
            "description": "Total discount, Bel_RabattTotal",
            "format": "double",
            "nullable": true
          },
          "totalVat": {
            "type": "number",
            "description": "Total VAT",
            "format": "double",
            "nullable": true
          },
          "totalPayed": {
            "type": "number",
            "description": "Total amount payed",
            "format": "double",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "Id from the online order, Bel_ExterneId",
            "nullable": true
          },
          "receiptTypeId": {
            "type": "integer",
            "description": "FK, Id of the receipt type, Bel_Belegtyp",
            "format": "int32",
            "nullable": true
          },
          "collectiveInvoiceId": {
            "type": "integer",
            "description": "FK, Id of the collective invoice, Bel_SammelrechnungID",
            "format": "int32",
            "nullable": true
          },
          "receiptStatus": {
            "$ref": "#/components/schemas/ReceiptStatusEnum"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceiptPosition"
            },
            "description": "List of receipt positions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Receipts"
      },
      "ReceiptPosition": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description, BelPos_Text",
            "nullable": true
          },
          "positionNumber": {
            "type": "integer",
            "description": "Position number, BelPos_Position",
            "format": "int32",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "FK, ID of article, BelPos_ArtikelID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitAmount": {
            "type": "number",
            "description": "trading unit amount, BelPos_MengeGG",
            "format": "double",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "FK, ID of trading unit, BelPos_GrossID",
            "format": "int32",
            "nullable": true
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "FK, ID of the filling unit, BelPos_AbfID",
            "format": "int32",
            "nullable": true
          },
          "fillingAmount": {
            "type": "number",
            "description": "Filling amount, BelPos_MengeAbf",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Price, BelPos_Preis",
            "format": "double",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage in price), BelPos_MWSTProzentInPreis",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Receipt positions"
      },
      "ReceiptStatusEnum": {
        "enum": [
          "new",
          "inProgress",
          "done",
          "payed",
          "archived",
          "cancelled"
        ],
        "type": "string",
        "description": "Status of a receipt"
      },
      "ReceiptType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Receipt types"
      },
      "Region": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Reg_Bezeichnung",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "FK country id, Reg_LandID",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent region id, Reg_RegID",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Regions"
      },
      "Salutation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "salutation": {
            "type": "string",
            "description": "Salutation",
            "nullable": true
          },
          "personType": {
            "$ref": "#/components/schemas/SalutationTypeV10"
          }
        },
        "additionalProperties": false,
        "description": "Salutations"
      },
      "SalutationTypeV10": {
        "enum": [
          "private",
          "company"
        ],
        "type": "string"
      },
      "SelectionCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation, Sel_Bezeichnung",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "FK Parent id, Sel_SelektionscodeID",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selection codes / SelektionsCode"
      },
      "SellingPrice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "FK, Id of the article",
            "format": "int32"
          },
          "priceGroupId": {
            "type": "integer",
            "description": "FK, Id of the price group, VK_KGrpPreisID",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price, VK_Preis",
            "format": "double"
          },
          "promotionPrice": {
            "type": "number",
            "description": "Promotions price, VK_PreisAktion",
            "format": "double",
            "nullable": true
          },
          "promotionText": {
            "type": "string",
            "description": "Promotions text, VK_Aktionstext",
            "nullable": true
          },
          "isPromotion": {
            "type": "boolean",
            "description": "Is promotion, VK_IstAktion"
          },
          "priceValidFrom": {
            "type": "string",
            "description": "Unit price valid from, VK_VonDatum",
            "format": "date-time",
            "nullable": true
          },
          "priceValidUntil": {
            "type": "string",
            "description": "Unit price valid until, VK_BisDatum",
            "format": "date-time",
            "nullable": true
          },
          "promotionValidFrom": {
            "type": "string",
            "description": "Promotions price valid from, VK_DatumVon",
            "format": "date-time",
            "nullable": true
          },
          "promotionValidUntil": {
            "type": "string",
            "description": "Promotions price valid until, VK_DatumBis",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selling prices, VKPreis"
      },
      "SellingSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "fillingId": {
            "type": "integer",
            "description": "ID of filling",
            "format": "int32",
            "nullable": true
          },
          "setArticleId": {
            "type": "integer",
            "description": "ID of set article",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "ID of article",
            "format": "int32"
          },
          "tradeUnitId": {
            "type": "integer",
            "description": "ID of trading unit",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "format": "double"
          },
          "amountTradingUnit": {
            "type": "integer",
            "description": "Amount trading unit",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Position",
            "format": "int32",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "description": "Percentage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selling sets"
      },
      "StockInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "quantityAvailable": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Info to the current stock availability"
      },
      "StockLocationInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "quantityAvailable": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          },
          "quantityCurrent": {
            "type": "number",
            "description": "current quantity in base units of the article",
            "format": "double"
          },
          "warehouseId": {
            "type": "integer",
            "description": "warehouse id where the stock is located",
            "format": "int32"
          },
          "forShop": {
            "type": "boolean",
            "description": "authorized for the shop"
          }
        },
        "additionalProperties": false,
        "description": "Info about the current stock locations"
      },
      "TradingUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designationWeb": {
            "type": "string",
            "description": "Designation, Gross_BezeichnungWeb",
            "nullable": true
          },
          "shortNameWeb": {
            "type": "string",
            "description": "Short name web, Gross_KuerzelWeb",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "description": "Short name, Gross_Kuerzel",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term",
            "nullable": true
          },
          "splitUsageArticleId": {
            "type": "integer",
            "description": "FK Article ID for split usage, Gross_AnbruchArtikelID",
            "format": "int32",
            "nullable": true
          },
          "isSplitUsageAllowed": {
            "type": "boolean",
            "description": "If partial usage is allowed, Gross_AnbruchErlaubt"
          },
          "splitUsageQuantity": {
            "type": "integer",
            "description": "Minimum quantity of consumer units to avoid split fee, Gross_AnbruchMenge",
            "format": "int32",
            "nullable": true
          },
          "hasSplitUsageFee": {
            "type": "boolean",
            "description": "If split usage will have an extra fee, Gross_AnbruchZuschlag"
          },
          "articleId": {
            "type": "integer",
            "description": "FK ID of the article, Gross_ArtID",
            "format": "int32"
          },
          "minimalUnit": {
            "type": "number",
            "description": "Minimal ordering units, Gross_EinhMinimal",
            "format": "double",
            "nullable": true
          },
          "unitsPerTradingUnit": {
            "type": "number",
            "description": "Consumer unit per trading unit, Gross_EinhProGG",
            "format": "double",
            "nullable": true
          },
          "isFillingDepositIncluded": {
            "type": "boolean",
            "description": "If filling deposit is included, Gross_InklAbfDepot"
          },
          "isChargeable": {
            "type": "boolean",
            "description": "Is chargeable, Gross_Verrechenbar"
          }
        },
        "additionalProperties": false,
        "description": "Trading units, Grossgebinde"
      },
      "VatSummation": {
        "type": "object",
        "properties": {
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "vat position of the basket, used in the vat summary"
      },
      "Wine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term",
            "nullable": true
          },
          "classificationId": {
            "type": "integer",
            "description": "ID of classification",
            "format": "int32",
            "nullable": true
          },
          "storagePeriod": {
            "type": "integer",
            "description": "Optimal storage period",
            "format": "int32",
            "nullable": true
          },
          "maximalStoragePeriod": {
            "type": "integer",
            "description": "Maximal storage period",
            "format": "int32",
            "nullable": true
          },
          "ratingPoints": {
            "type": "integer",
            "description": "Rating points",
            "format": "int32",
            "nullable": true
          },
          "drinkingTemperature": {
            "type": "integer",
            "description": "Optimal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "minimalDrinkingTemperature": {
            "type": "integer",
            "description": "Minimal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "maximalDrinkingTemperature": {
            "type": "integer",
            "description": "Maximal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "ratingTextRtf": {
            "type": "string",
            "description": "Rating text in Rtf",
            "nullable": true
          },
          "ratingText": {
            "type": "string",
            "description": "Rating text",
            "nullable": true,
            "readOnly": true
          },
          "consumptionAdviceRtf": {
            "type": "string",
            "description": "Consumption advice in Rtf",
            "nullable": true
          },
          "consumptionAdvice": {
            "type": "string",
            "description": "Consumption advice",
            "nullable": true,
            "readOnly": true
          },
          "vinificationRtf": {
            "type": "string",
            "description": "Vinification in Rtf",
            "nullable": true
          },
          "vinification": {
            "type": "string",
            "description": "Vinification",
            "nullable": true,
            "readOnly": true
          },
          "characteristicRtf": {
            "type": "string",
            "description": "Characteristic in Rtf",
            "nullable": true
          },
          "characteristic": {
            "type": "string",
            "description": "Characteristic",
            "nullable": true,
            "readOnly": true
          },
          "terroirRtf": {
            "type": "string",
            "description": "Terroir in Rtf",
            "nullable": true
          },
          "terroir": {
            "type": "string",
            "description": "Terroir",
            "nullable": true,
            "readOnly": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Wines"
      },
      "WineComposition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "wineId": {
            "type": "integer",
            "description": "FK wine id, ArtZus_WeininfoID",
            "format": "int32"
          },
          "grapeId": {
            "type": "integer",
            "description": "FK grape id, ArtZus_TraubensorteID",
            "format": "int32"
          },
          "proportion": {
            "type": "number",
            "description": "proportion (in percentages), ArtZus_Anteil",
            "format": "double",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "Sorting order, ArtZus_Position",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Wine compositions, ArtikelZusammensetzung"
      },
      "WineRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "wineId": {
            "type": "integer",
            "description": "FK wine id",
            "format": "int32"
          },
          "ratingId": {
            "type": "integer",
            "description": "FK rating id",
            "format": "int32"
          },
          "points": {
            "type": "number",
            "description": "Rating points",
            "format": "double",
            "nullable": true
          },
          "ratingDate": {
            "type": "string",
            "description": "Rating date",
            "format": "date-time",
            "nullable": true
          },
          "ratingText": {
            "type": "string",
            "description": "Rating text",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, ArtBew_Jahrgang",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Wine ratings, ArtikelBewertung"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}

2023-04-12 14:28:26.6594|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000005' to 'http://localhost:8085/swagger/index.html?urls.primaryName=I-AG%20Standard%20Shop%20API%201.0 with 0 bytes of data of type Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document

2023-04-12 14:28:26.6721|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000005'OK' (200)
Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/App/swagger.json","name":"I-AG App API"},{"url":"/swagger/Base/swagger.json","name":"I-AG Base API"},{"url":"/swagger/Shopv10/swagger.json","name":"I-AG Standard Shop API 1.0"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>


2023-04-12 14:28:26.8510|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000006' to 'http://localhost:8085/swagger/App/swagger.json with 0 bytes of data of type Accept: application/json,*/*
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Referer: http://localhost:8085/swagger/index.html?urls.primaryName=I-AG%20Standard%20Shop%20API%201.0
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty

2023-04-12 14:28:26.9602|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000006'OK' (200)
Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "I-AG App API",
    "description": "I-AG API for the App",
    "version": "1.0"
  },
  "paths": {
    "/api/Core/VinX/Mobile/VinX/Article": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/DatabaseInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/Division": {
      "get": {
        "tags": [
          "Core"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Division"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/InventoryData": {
      "post": {
        "tags": [
          "Core"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryData"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaData": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaHeader": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaHeader"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/MediaUse": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaUse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/PackageUnit": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageUnit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/RequestToken": {
      "post": {
        "tags": [
          "Core"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleRequestTokenParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/StorageLocation": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageLocation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/StoragePlace": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoragePlace"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Core/VinX/Mobile/VinX/User": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changedUntil",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ContentDescription": {
            "type": "string",
            "nullable": true
          },
          "Producer": {
            "type": "string",
            "nullable": true
          },
          "Vintage": {
            "type": "string",
            "nullable": true
          },
          "FullTextSearch": {
            "type": "string",
            "nullable": true
          },
          "LotMandatory": {
            "type": "integer",
            "format": "int32"
          },
          "ScanningMandatory": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ArticleType": {
            "$ref": "#/components/schemas/ArticleTypeAppEnum"
          },
          "InfoShort1": {
            "type": "string",
            "nullable": true
          },
          "InfoShort2": {
            "type": "string",
            "nullable": true
          },
          "InfoShort3": {
            "type": "string",
            "nullable": true
          },
          "InfoLong1": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ArticleTypeAppEnum": {
        "enum": [
          "Package",
          "General"
        ],
        "type": "string"
      },
      "DatabaseInfo": {
        "type": "object",
        "properties": {
          "CurrentDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Division": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryData": {
        "type": "object",
        "properties": {
          "ArticleId": {
            "type": "string",
            "format": "uuid"
          },
          "StoragePlaceId": {
            "type": "string",
            "format": "uuid"
          },
          "PackageId": {
            "type": "string",
            "format": "uuid"
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "BatchId": {
            "type": "string",
            "format": "uuid"
          },
          "Lot": {
            "type": "string",
            "nullable": true
          },
          "TimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "Level": {
            "type": "integer",
            "format": "int32"
          },
          "LevelFactor": {
            "type": "integer",
            "format": "int32"
          },
          "PackageCount": {
            "type": "integer",
            "format": "int32"
          },
          "BaseUnitCount": {
            "type": "integer",
            "format": "int32"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MediaHeader": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Hash": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MediaUse": {
        "type": "object",
        "properties": {
          "MediaId": {
            "type": "string",
            "format": "uuid"
          },
          "UseIdId": {
            "type": "string",
            "format": "uuid"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PackageUnit": {
        "type": "object",
        "properties": {
          "ArticleId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "NbUnits": {
            "type": "integer",
            "format": "int32"
          },
          "Level": {
            "type": "integer",
            "format": "int32"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "userLanguage": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userShouldChangePassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SimpleRequestTokenParameter": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StorageLocation": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StoragePlace": {
        "type": "object",
        "properties": {
          "StorageLocationId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "NameLocation": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "Login": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DivisionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}

2023-04-12 14:28:28.9659|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000007' to 'http://localhost:8085/swagger/Shopv10/swagger.json with 0 bytes of data of type Accept: application/json,*/*
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Referer: http://localhost:8085/swagger/index.html?urls.primaryName=I-AG%20Standard%20Shop%20API%201.0
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty

2023-04-12 14:28:29.5011|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000007'OK' (200)
Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "I-AG Standard Shop API 1.0",
    "description": "I-AG Standard Shop API Version 1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/v1.0/Core/VinX/Shop/BaseData/Address": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the addresses",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Address({id})/ChangeShopUsername": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "change shop username for an specified address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the address",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new shop username",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressChangeParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Article": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the categories of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ArticleCategory": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the categories of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ArticleSelectionCode": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selection codes of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleSelectionCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Classification": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the classifications",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Country": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the countries",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/CustomerCategory": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the customer categories",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DeliveryCondition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the delivery conditions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCondition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DiscountGroupArticleCustomer": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the discount groups of the articles for customer discounts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupArticleCustomer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Document({id})": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get a document by it's id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/DocumentInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the document infos",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ECommerceGroup": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the e-commerce groups of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECommerceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Filling": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the fillings of the articles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filling"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Grape": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the grapes",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grape"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PaymentCondition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the payment conditions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCondition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PaymentMeans": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the means of payment",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMeans"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/PriceGroup": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the price groups",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Producer": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the producers",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ProductCycle": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the product cycles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCycle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Rating": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the ratings",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Receipt": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the receipts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/ReceiptType": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the receipt types",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiptType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Region": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the countries",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Salutation": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the salutations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salutation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SelectionCode": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selection codes",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SellingPrices": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selling prices",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingPrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/SellingSet": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the selling sets",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellingSet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/TradingUnit": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the trading units",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradingUnit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Warehouse": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the warehouse infos",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lager"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/Wine": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wines",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/WineComposition": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wine compositions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineComposition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseData/WineRating": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the wine ratings",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineRating"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/BaseDataLad/ArticleLad": {
      "get": {
        "tags": [
          "Core"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleLad"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/OrderProposal": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the order history positions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderProposal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/ProductInfo": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "get the product details according to the query parameters",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/StockInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the stock data",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Calculated/StockLocationInfo": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get the stock location info",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Parameter '$filter' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Parameter '$skip' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Parameter '$top' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Parameter '$select' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Parameter '$orderby' for OData query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockLocationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/Basket": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "send a new basket",
        "description": "send a new basket. Control with 'action' whether to calculate only or to order. return is always the calculated basket with all relevant attributes.",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Basket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Basket"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/OnlineAddress": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "send new online address",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/Core/VinX/Shop/Online/OnlineAddress({id})": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "get an online addresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineAddress"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key, Adr_ID",
            "format": "int32"
          },
          "addressNumber": {
            "type": "number",
            "description": "Address number, Adr_Adressnummer",
            "format": "double",
            "nullable": true
          },
          "priceGroupId": {
            "type": "integer",
            "description": "FK, ID of the price group, Adr_KGrpPreisID",
            "format": "int32",
            "nullable": true
          },
          "salesRepresentativeId": {
            "type": "integer",
            "description": "FK, ID of the sales representative, Adr_VertrID",
            "format": "int32",
            "nullable": true
          },
          "selectionCodeId": {
            "type": "integer",
            "description": "FK, ID of the selection, Adr_SortimentID",
            "format": "int32",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Adr_Suchbegriff",
            "nullable": true
          },
          "salutationId": {
            "type": "integer",
            "description": "FK, ID of salutation, Adr_AnrID",
            "format": "int32",
            "nullable": true
          },
          "letterSalutation": {
            "type": "string",
            "description": "Letter salutation, Adr_Briefanrede",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title, Adr_Titel",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name, Adr_Vorname",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Last name, Adr_Name",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Company name, Adr_Firma",
            "nullable": true
          },
          "companyAdditionalName": {
            "type": "string",
            "description": "Company additional name, Adr_Firmenzusatz",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZIP code",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country",
            "format": "int32",
            "nullable": true
          },
          "additionalLine1": {
            "type": "string",
            "description": "Additional address line 1",
            "nullable": true
          },
          "additionalLine2": {
            "type": "string",
            "description": "Additional address line 2",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "bonusRevenue": {
            "type": "integer",
            "description": "Bonus revenue",
            "format": "int32",
            "nullable": true
          },
          "customerCategoryId": {
            "type": "integer",
            "description": "FK, ID of customer category",
            "format": "int32",
            "nullable": true
          },
          "deliveryConditionId": {
            "type": "integer",
            "description": "FK, ID of delivery condition",
            "format": "int32",
            "nullable": true
          },
          "paymentConditionId": {
            "type": "integer",
            "description": "FK, ID of payment condition",
            "format": "int32",
            "nullable": true
          },
          "billingAddressId": {
            "type": "integer",
            "description": "FK, ID of billing address",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "description": "E-mail address",
            "nullable": true
          },
          "phoneDirect": {
            "type": "string",
            "description": "Phone number direct",
            "nullable": true
          },
          "phoneBusiness": {
            "type": "string",
            "description": "Phone number business",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "description": "Phone number private",
            "nullable": true
          },
          "faxBusiness": {
            "type": "string",
            "description": "Fax number business",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "shopUsername": {
            "type": "string",
            "description": "Shop username",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "birthday": {
            "type": "string",
            "description": "Birthday, Adr_Geburtsdatum",
            "format": "date-time",
            "nullable": true
          },
          "promotionAllowed": {
            "type": "boolean",
            "description": "Promotions are allowed, Adr_Aktionsberechtigung = 10"
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Addresses, table \"Adresse\""
      },
      "AddressChangeParam": {
        "type": "object",
        "properties": {
          "shopUsername": {
            "type": "string",
            "description": "new shop username",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Parameter for changing a shop username"
      },
      "AddressChangeTypeV10": {
        "enum": [
          "new",
          "change",
          "nop"
        ],
        "type": "string",
        "description": "action to perform: create new address or change existing"
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Art_Bezeichnung",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Art_Suchbegriff",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number, Art_Artikelnummer",
            "nullable": true
          },
          "articleCategoryId": {
            "type": "integer",
            "description": "ID of article category, Art_AKatID",
            "format": "int32",
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/ArticleCategoryKindV10"
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "ID of filling, Art_AbfID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "ID of trading unit, Art_GrossID",
            "format": "int32",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage), MWST_Prozent",
            "format": "double"
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country, Art_LandID",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "description": "ID of the region, Art_RegionId",
            "format": "int32",
            "nullable": true
          },
          "productCycleId": {
            "type": "integer",
            "description": "ID of the product cycle, Art_ZyklusId",
            "format": "int32",
            "nullable": true
          },
          "producerId": {
            "type": "integer",
            "description": "ID of the producer, Art_ProduzentID",
            "format": "int32",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, Art_Jahrgang",
            "format": "int32",
            "nullable": true
          },
          "wineId": {
            "type": "integer",
            "description": "ID of wine, Art_WeininfoID",
            "format": "int32",
            "nullable": true
          },
          "volume": {
            "type": "number",
            "description": "Percentage per volume alcohol, Art_Volumen",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "withStock": {
            "type": "boolean",
            "description": "Article is inventory managed"
          },
          "eCommerceGroupId": {
            "type": "integer",
            "description": "ID of e-commerce group, Art_EGruppeID",
            "format": "int32",
            "nullable": true
          },
          "priceUnit": {
            "type": "number",
            "description": "Price unit, Art_Preiseinheit",
            "format": "double",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "description": "Base price, Art_Grundpreis",
            "format": "double",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          },
          "substituteArticleId": {
            "type": "integer",
            "description": "ID of substitute article,Art_ErsatzArtikelID",
            "format": "int32",
            "nullable": true
          },
          "substituteArticleText": {
            "type": "string",
            "description": "Additional text of the substitute article, Art_ErsatzArtikelText",
            "nullable": true
          },
          "picturePathLocal": {
            "type": "string",
            "description": "Picture local path, Art_BildDatei",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Weight / Art_Gewichtsanteil",
            "format": "double",
            "nullable": true
          },
          "ean1": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean2": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean3": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Articles"
      },
      "ArticleCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Categories of the articles"
      },
      "ArticleCategoryKindV10": {
        "enum": [
          "wine",
          "mineral",
          "beer",
          "spirits",
          "fruits",
          "diverse",
          "food",
          "nonFood",
          "tax",
          "set",
          "service",
          "expense",
          "fee"
        ],
        "type": "string",
        "description": "Kind of article category"
      },
      "ArticleLad": {
        "type": "object",
        "properties": {
          "contentInfo": {
            "type": "string",
            "nullable": true
          },
          "nutritionInfo": {
            "type": "string",
            "nullable": true
          },
          "allergenInfo": {
            "type": "string",
            "nullable": true
          },
          "noNutritionInfo": {
            "type": "boolean",
            "nullable": true
          },
          "articleInfo": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Art_Bezeichnung",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Art_Suchbegriff",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number, Art_Artikelnummer",
            "nullable": true
          },
          "articleCategoryId": {
            "type": "integer",
            "description": "ID of article category, Art_AKatID",
            "format": "int32",
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/ArticleCategoryKindV10"
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "ID of filling, Art_AbfID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "ID of trading unit, Art_GrossID",
            "format": "int32",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage), MWST_Prozent",
            "format": "double"
          },
          "countryId": {
            "type": "integer",
            "description": "ID of country, Art_LandID",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "description": "ID of the region, Art_RegionId",
            "format": "int32",
            "nullable": true
          },
          "productCycleId": {
            "type": "integer",
            "description": "ID of the product cycle, Art_ZyklusId",
            "format": "int32",
            "nullable": true
          },
          "producerId": {
            "type": "integer",
            "description": "ID of the producer, Art_ProduzentID",
            "format": "int32",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, Art_Jahrgang",
            "format": "int32",
            "nullable": true
          },
          "wineId": {
            "type": "integer",
            "description": "ID of wine, Art_WeininfoID",
            "format": "int32",
            "nullable": true
          },
          "volume": {
            "type": "number",
            "description": "Percentage per volume alcohol, Art_Volumen",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "withStock": {
            "type": "boolean",
            "description": "Article is inventory managed"
          },
          "eCommerceGroupId": {
            "type": "integer",
            "description": "ID of e-commerce group, Art_EGruppeID",
            "format": "int32",
            "nullable": true
          },
          "priceUnit": {
            "type": "number",
            "description": "Price unit, Art_Preiseinheit",
            "format": "double",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "description": "Base price, Art_Grundpreis",
            "format": "double",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time",
            "nullable": true
          },
          "changedOn": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time",
            "nullable": true
          },
          "substituteArticleId": {
            "type": "integer",
            "description": "ID of substitute article,Art_ErsatzArtikelID",
            "format": "int32",
            "nullable": true
          },
          "substituteArticleText": {
            "type": "string",
            "description": "Additional text of the substitute article, Art_ErsatzArtikelText",
            "nullable": true
          },
          "picturePathLocal": {
            "type": "string",
            "description": "Picture local path, Art_BildDatei",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Weight / Art_Gewichtsanteil",
            "format": "double",
            "nullable": true
          },
          "ean1": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean2": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          },
          "ean3": {
            "type": "integer",
            "description": "EAN1",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArticleParameter": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "List of article - quantity pairs to calculate the price"
      },
      "ArticleSelectionCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "FK, id of the article",
            "format": "int32"
          },
          "selectionId": {
            "type": "integer",
            "description": "FK, id of the selectionCode",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Selection codes of the articles"
      },
      "Basket": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/BasketActionTypeV10"
          },
          "Id": {
            "type": "integer",
            "description": "id of the stored basket in VinX, if action = order, output",
            "format": "int32",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "arbitrary id attributed by the shop, input, optional",
            "nullable": true
          },
          "divisionId": {
            "type": "integer",
            "description": "id of the division to calculate the prices for, input, optional",
            "format": "int32",
            "nullable": true
          },
          "orderText": {
            "type": "string",
            "description": "free text to the order / Best_Hinweis",
            "nullable": true
          },
          "customerWithVat": {
            "type": "boolean",
            "description": "Prices are to show with VAT, output"
          },
          "conditionAddressId": {
            "type": "integer",
            "description": "id of the condition address. Required to determine the price conditions if no address-Ids are transmitted",
            "format": "int32",
            "nullable": true
          },
          "orderingAddressId": {
            "type": "integer",
            "description": "id of the ordering address. Required if no online address is transmitted",
            "format": "int32",
            "nullable": true
          },
          "billingAddressId": {
            "type": "integer",
            "description": "id of the billing address, input, optional",
            "format": "int32",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "integer",
            "description": "id of the delivery address, input, optional",
            "format": "int32",
            "nullable": true
          },
          "orderingOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "billingOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "deliveryOnlineAddress": {
            "$ref": "#/components/schemas/OnlineAddress"
          },
          "paymentConditionId": {
            "type": "integer",
            "description": "id of the payment condition, reference to /paymentCondition, input, required",
            "format": "int32",
            "nullable": true
          },
          "deliveryConditionId": {
            "type": "integer",
            "description": "id of the delivery condition, reference to /deliveryCondition, input, required",
            "format": "int32"
          },
          "amountPayed": {
            "type": "number",
            "description": "in the shop payed amount, input",
            "format": "double"
          },
          "validDate": {
            "type": "string",
            "description": "Date for the price calculation, default = today",
            "format": "date-time"
          },
          "deliveryDateRequested": {
            "type": "string",
            "description": "requested delivery date by the customer, default = today / Best_Lieferdatum",
            "format": "date-time"
          },
          "paymentMeansId": {
            "type": "integer",
            "description": "FK, id means of payment, input, optional",
            "format": "int32",
            "nullable": true
          },
          "saferPayId": {
            "type": "string",
            "description": "saferpay id, input",
            "nullable": true
          },
          "saferPayToken": {
            "type": "string",
            "description": "saferpay token id, input",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "payment terms, output",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "description": "id of the provider for this order, input, optional",
            "format": "int32",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketPosition"
            },
            "description": "list of the positions of the basket",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargePosition"
            },
            "description": "list of the charges of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPosition"
            },
            "description": "list of the discounts of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagePosition"
            },
            "description": "list of the packages of the basket at header level, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "vatSummations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatSummation"
            },
            "description": "vat summation, output",
            "nullable": true
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order positions, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "chargeTotalAmount": {
            "type": "number",
            "description": "total amount charges, output",
            "format": "double"
          },
          "discountTotalAmount": {
            "type": "number",
            "description": "total amount discounts, output",
            "format": "double"
          },
          "packagesTotalAmount": {
            "type": "number",
            "description": "total amount packages, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "roundingAmount": {
            "type": "number",
            "description": "rounding amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "header information of the basket"
      },
      "BasketActionTypeV10": {
        "enum": [
          "calculate",
          "order"
        ],
        "type": "string",
        "description": "action to perform, calculate only or treat as order, input, required"
      },
      "BasketPosition": {
        "type": "object",
        "properties": {
          "stockQuantity": {
            "type": "number",
            "description": "available quantity in stock",
            "format": "double"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargePosition"
            },
            "description": "list of the charges of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPosition"
            },
            "description": "list of the discounts of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagePosition"
            },
            "description": "list of the packages of the position, calculated by VinX. Inputs are ignored.",
            "nullable": true
          },
          "chargeTotalAmount": {
            "type": "number",
            "description": "total amount charges, output",
            "format": "double"
          },
          "discountTotalAmount": {
            "type": "number",
            "description": "total amount discounts, output",
            "format": "double"
          },
          "packagesTotalAmount": {
            "type": "number",
            "description": "total amount packages, output",
            "format": "double"
          },
          "isNetto": {
            "type": "boolean",
            "description": "netto-flag after calculation, output"
          },
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "order position of the basket"
      },
      "ChargePosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "charge, all output and always calculated by VinX"
      },
      "Classification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Classifications"
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sort order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Countries"
      },
      "CustomerCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "costCenterId": {
            "type": "integer",
            "description": "ID of cost center",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Customer categories"
      },
      "DeliveryCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, Liefbed_Bezeichnung",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Delivery conditions, Lieferbedingung"
      },
      "DiscountGroupArticleCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Discount groups of the articles for customer discounts / ArtikelgruppeRabatt"
      },
      "DiscountPosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "discount, all output and calculated by VinX"
      },
      "DocumentInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id of the document, can be read by a coll to /document(id)",
            "format": "int32"
          },
          "receiptId": {
            "type": "integer",
            "description": "FK, id of the receipt",
            "format": "int32"
          },
          "addressId": {
            "type": "integer",
            "description": "FK, id of the address the document belongs to",
            "format": "int32"
          },
          "documentDescription": {
            "type": "string",
            "description": "Name/description of the document",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Documents"
      },
      "ECommerceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "Id of the parent group, can be empty",
            "format": "int32",
            "nullable": true
          },
          "sortKey": {
            "type": "string",
            "description": "Optional sorting key",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "E-commerce grouping of the articles"
      },
      "Filling": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation, Abf_BezeichnungWeb",
            "nullable": true
          },
          "shortNameWeb": {
            "type": "string",
            "description": "Short name web, Abf_KuerzelWeb",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "description": "Short name, Abf_Kuerzel",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term, Abf_Suchbegriff",
            "nullable": true
          },
          "contentInCl": {
            "type": "number",
            "description": "Content in centiliters, Abf_InhaltInCl",
            "format": "double"
          },
          "isChargeable": {
            "type": "boolean",
            "description": "Chargeable, Abf_Verrechenbar"
          },
          "articleId ": {
            "type": "integer",
            "description": "ID of the filling article, Abf_ArtID",
            "format": "int32"
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Fillings of the articles, Abfuellung"
      },
      "Grape": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "characteristicRtf": {
            "type": "string",
            "description": "Characteristic in Rtf",
            "nullable": true
          },
          "characteristic": {
            "type": "string",
            "description": "Characteristic",
            "nullable": true,
            "readOnly": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Grapes, Traubensorte"
      },
      "Lager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "designation, Lag_Bezeichnung",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineAddress": {
        "type": "object",
        "properties": {
          "changeType": {
            "$ref": "#/components/schemas/AddressChangeTypeV10"
          },
          "id": {
            "type": "integer",
            "description": "id in VinX",
            "format": "int32",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "address-id in VinX, only for type [change]",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "title / Adr_Titel",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "first name / Adr_Vorname",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "last name / Adr_Name",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "email / Adr_Email",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "description": "homepage / Adr_Homepage",
            "nullable": true
          },
          "salutationId": {
            "type": "integer",
            "description": "salutation id (must be known in the shop) / Adr_AnrID",
            "format": "int32",
            "nullable": true
          },
          "phoneDirect": {
            "type": "string",
            "description": "Phone number direct",
            "nullable": true
          },
          "phoneBusiness": {
            "type": "string",
            "description": "Phone number business",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "description": "Phone number private",
            "nullable": true
          },
          "faxBusiness": {
            "type": "string",
            "description": "Fax number business",
            "nullable": true
          },
          "phoneMobile": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "additional adress line 1 / Adr_Zusatz1",
            "nullable": true
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "additional adress line 2 / Adr_Zusatz2",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "description": "zip code / Adr_Plz",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "city / Adr_Ort",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "street / Adr_Strasse",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "country / Land_Code",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "language-code / Adr_Sprache",
            "nullable": true
          },
          "loginName": {
            "type": "string",
            "description": "login name, must be unique over all addresses and contacts / Adr_OnlineBenutzername",
            "nullable": true
          },
          "onlineActive": {
            "type": "boolean",
            "description": "online active, default = true / Adr_OnlineAktiv"
          },
          "divisionId": {
            "type": "integer",
            "description": "id of the division, input, optional",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "data structure to transmit new addresses and changes"
      },
      "OrderPositionTypeV10": {
        "enum": [
          "orderPos",
          "discount",
          "charge",
          "shipping",
          "package",
          "fee"
        ],
        "type": "string",
        "description": "kind of orderPosition, 'orderPos' is the only one treated as in input from the shop, the rest are calculated positions"
      },
      "OrderProposal": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "FK, Id of the article",
            "format": "int32"
          },
          "articleNumber": {
            "type": "string",
            "description": "Article number",
            "nullable": true
          },
          "categoryDesignation": {
            "type": "string",
            "description": "Designation of the article category",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "FK, Id of the address",
            "format": "int32"
          },
          "onlineUserName": {
            "type": "string",
            "description": "Online user name",
            "nullable": true
          },
          "quantityOrdered": {
            "type": "number",
            "description": "Quantity of the products",
            "format": "double",
            "nullable": true
          },
          "numberOfOrders": {
            "type": "integer",
            "description": "Number of orders",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ratings"
      },
      "PackagePosition": {
        "type": "object",
        "properties": {
          "posType": {
            "$ref": "#/components/schemas/OrderPositionTypeV10"
          },
          "posNumber": {
            "type": "string",
            "description": "number of the position, must be unique",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "id of the article in VinX, input required",
            "format": "int32"
          },
          "orderedQuantity": {
            "type": "number",
            "description": "ordered quantity in base units of the article",
            "format": "double"
          },
          "billedQuantity": {
            "type": "number",
            "description": "billed quantity in base units of the article",
            "format": "double"
          },
          "articleNumber": {
            "type": "string",
            "description": "number of the article in VinX, output",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description of the position, equals the description of the article, output",
            "nullable": true
          },
          "priceCalculationRule": {
            "$ref": "#/components/schemas/PriceCalculationKindV10"
          },
          "unitPrice": {
            "type": "number",
            "description": "unit price excl VAT, in-, output",
            "format": "double"
          },
          "unitPriceWithTax": {
            "type": "number",
            "description": "unit price incl VAT, in-, output",
            "format": "double"
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "lineTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "lineCumulativeTotalAmount": {
            "type": "number",
            "description": "total amount of the order position excl. VAT, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          },
          "grandTotalAmount": {
            "type": "number",
            "description": "grand total incl VAT if applicable, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "package position of the basket"
      },
      "PaymentCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, Zahlkond_OnlineBezeichnung or Zahlkond_Kurzbezeichnung",
            "nullable": true
          },
          "cashDiscountDays": {
            "type": "integer",
            "description": "Cash discount days, Zahlkond_TageSkonto",
            "format": "int32",
            "nullable": true
          },
          "cashDiscountPercentage": {
            "type": "number",
            "description": "Cash discount percentage, Zahlkond_ProzentSkonto",
            "format": "double",
            "nullable": true
          },
          "paymentDays": {
            "type": "integer",
            "description": "Payment days, Zahlkond_TageNetto",
            "format": "int32"
          },
          "paymentTerms": {
            "type": "string",
            "description": "Payment terms, Zahlkond_BezeichnungNetto",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Condition is avtive, Zahlkond_Aktiv"
          }
        },
        "additionalProperties": false,
        "description": "payment conditions, filtered to online active = true"
      },
      "PaymentMeans": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Designation, ZahWeg_Bezeichnung",
            "nullable": true
          },
          "paymentMeansKind": {
            "$ref": "#/components/schemas/PaymentMeansKindV10"
          }
        },
        "additionalProperties": false,
        "description": "means of payment, filtered to active = true"
      },
      "PaymentMeansKindV10": {
        "enum": [
          "other",
          "creditCard"
        ],
        "type": "string"
      },
      "PriceCalculationKindV10": {
        "enum": [
          "customer",
          "promotion",
          "priceGroup",
          "article",
          "override",
          "fromShop",
          "notFound"
        ],
        "type": "string"
      },
      "PriceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "fallbackId": {
            "type": "integer",
            "description": "Id of the fallback price group, KundPreis_ErsatzKGrpPreisID",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, KundPreis_Bezeichnung",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Is active, KundPreis_Aktiv"
          },
          "pricesWithVat": {
            "type": "boolean",
            "description": "Prices with VAT, KundPreis_InklMWST"
          }
        },
        "additionalProperties": false,
        "description": "Price groups, KundengruppePreis"
      },
      "PriceParameter": {
        "type": "object",
        "properties": {
          "validDate": {
            "type": "string",
            "description": "Date of the price calculation, defaults to current date",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "description": "Id of the customer address, either this or priceGroupId must be set",
            "format": "int32",
            "nullable": true
          },
          "priceGroupId": {
            "type": "integer",
            "description": "id of the price group, either this or addressId must be set\r\nprices for price groups include promotion prices, although these might not be valid for a certain customer!",
            "format": "int32",
            "nullable": true
          },
          "articleParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Parameter for batch calculation of prices. If CustomerId ist set, PriceGroupId is ignored."
      },
      "Producer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "addressId": {
            "type": "integer",
            "description": "Id of the address of the producer",
            "format": "int32",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Prod_Bezeichnung",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description, Prod_Text",
            "nullable": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          },
          "website": {
            "type": "string",
            "description": "Website",
            "nullable": true
          },
          "inhouseProduction": {
            "type": "boolean",
            "description": "In-house production, Prod_EigenProduktion"
          }
        },
        "additionalProperties": false,
        "description": "Producers"
      },
      "ProductCycle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Is active"
          }
        },
        "additionalProperties": false,
        "description": "Product cycles of the articles"
      },
      "ProductInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "priceGroupId": {
            "type": "integer",
            "description": "id of the price group",
            "format": "int32",
            "nullable": true
          },
          "stock": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "description": "quantity in base units of the article",
            "format": "double"
          },
          "price": {
            "type": "number",
            "description": "price excl VAT for the article in the context of the query parameters, but not promotion",
            "format": "double",
            "nullable": true
          },
          "pricePromotion": {
            "type": "number",
            "description": "price excl VAT for the article in the context of the query parameters for promotions",
            "format": "double",
            "nullable": true
          },
          "promotionText": {
            "type": "string",
            "description": "Description of the promition",
            "nullable": true
          },
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent",
            "format": "double"
          },
          "isNetto": {
            "type": "boolean",
            "description": "netto-flag after calculation, output"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInfoDiscount"
            },
            "description": "applicable discounts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "detail of a product in the context of a customer and / or price group"
      },
      "ProductInfoDiscount": {
        "type": "object",
        "properties": {
          "customerDiscountGroupId": {
            "type": "integer",
            "description": "FK, id of the discount group of the customer",
            "format": "int32"
          },
          "articleDiscountGroupId": {
            "type": "integer",
            "description": "FK, id of the discount group of the article",
            "format": "int32"
          },
          "discount": {
            "type": "number",
            "description": "discount excl VAT",
            "format": "double"
          },
          "discountText": {
            "type": "string",
            "description": "Description of the discount",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "detail of a product discount in the context of a customer"
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "minimalRating": {
            "type": "integer",
            "description": "Minimal rating",
            "format": "int32",
            "nullable": true
          },
          "maximalRating": {
            "type": "integer",
            "description": "Maximal rating",
            "format": "int32",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Unit",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ratings"
      },
      "Receipt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "receiptNumber": {
            "type": "integer",
            "description": "Receipt number",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "description": "Order number",
            "format": "int32",
            "nullable": true
          },
          "deliveryNoteNumber": {
            "type": "integer",
            "description": "Delivery note number",
            "format": "int32",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "integer",
            "description": "Invoice number",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date of creation, Bel_DatumErfassung",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "description": "Date of the order, Bel_BestellDatum",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Due date of thhe invoice, Bel_FaelligkeitNetto",
            "format": "date-time",
            "nullable": true
          },
          "receiptDate": {
            "type": "string",
            "description": "Date on receipt, Bel_Datum",
            "format": "date-time",
            "nullable": true
          },
          "deliveryNoteDate": {
            "type": "string",
            "description": "Date on delivery note, Bel_DatumLS",
            "format": "date-time",
            "nullable": true
          },
          "pricingDate": {
            "type": "string",
            "description": "Date of pricing, Bel_DatumPreise",
            "format": "date-time",
            "nullable": true
          },
          "invoicingDate": {
            "type": "string",
            "description": "Date on invoice, Bel_DatumRE",
            "format": "date-time",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "FK, ID of address",
            "format": "int32",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "integer",
            "description": "ID of delivery address",
            "format": "int32",
            "nullable": true
          },
          "totalNet": {
            "type": "number",
            "description": "Total net, Bel_GesamtNetto",
            "format": "double",
            "nullable": true
          },
          "totalGoods": {
            "type": "number",
            "description": "Total goods, Bel_ArtikelTotal",
            "format": "double",
            "nullable": true
          },
          "totalContainer": {
            "type": "number",
            "description": "Total of the containers, Bel_GebindeTotal",
            "format": "double",
            "nullable": true
          },
          "totalDiscount": {
            "type": "number",
            "description": "Total discount, Bel_RabattTotal",
            "format": "double",
            "nullable": true
          },
          "totalVat": {
            "type": "number",
            "description": "Total VAT",
            "format": "double",
            "nullable": true
          },
          "totalPayed": {
            "type": "number",
            "description": "Total amount payed",
            "format": "double",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "Id from the online order, Bel_ExterneId",
            "nullable": true
          },
          "receiptTypeId": {
            "type": "integer",
            "description": "FK, Id of the receipt type, Bel_Belegtyp",
            "format": "int32",
            "nullable": true
          },
          "collectiveInvoiceId": {
            "type": "integer",
            "description": "FK, Id of the collective invoice, Bel_SammelrechnungID",
            "format": "int32",
            "nullable": true
          },
          "receiptStatus": {
            "$ref": "#/components/schemas/ReceiptStatusEnum"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceiptPosition"
            },
            "description": "List of receipt positions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Receipts"
      },
      "ReceiptPosition": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description, BelPos_Text",
            "nullable": true
          },
          "positionNumber": {
            "type": "integer",
            "description": "Position number, BelPos_Position",
            "format": "int32",
            "nullable": true
          },
          "articleId": {
            "type": "integer",
            "description": "FK, ID of article, BelPos_ArtikelID",
            "format": "int32",
            "nullable": true
          },
          "tradingUnitAmount": {
            "type": "number",
            "description": "trading unit amount, BelPos_MengeGG",
            "format": "double",
            "nullable": true
          },
          "tradingUnitId": {
            "type": "integer",
            "description": "FK, ID of trading unit, BelPos_GrossID",
            "format": "int32",
            "nullable": true
          },
          "fillingUnitId": {
            "type": "integer",
            "description": "FK, ID of the filling unit, BelPos_AbfID",
            "format": "int32",
            "nullable": true
          },
          "fillingAmount": {
            "type": "number",
            "description": "Filling amount, BelPos_MengeAbf",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Price, BelPos_Preis",
            "format": "double",
            "nullable": true
          },
          "vatPercentage": {
            "type": "number",
            "description": "VAT (percentage in price), BelPos_MWSTProzentInPreis",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Receipt positions"
      },
      "ReceiptStatusEnum": {
        "enum": [
          "new",
          "inProgress",
          "done",
          "payed",
          "archived",
          "cancelled"
        ],
        "type": "string",
        "description": "Status of a receipt"
      },
      "ReceiptType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Receipt types"
      },
      "Region": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation, Reg_Bezeichnung",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "FK country id, Reg_LandID",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent region id, Reg_RegID",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "Sorting order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Regions"
      },
      "Salutation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "salutation": {
            "type": "string",
            "description": "Salutation",
            "nullable": true
          },
          "personType": {
            "$ref": "#/components/schemas/SalutationTypeV10"
          }
        },
        "additionalProperties": false,
        "description": "Salutations"
      },
      "SalutationTypeV10": {
        "enum": [
          "private",
          "company"
        ],
        "type": "string"
      },
      "SelectionCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Designation, Sel_Bezeichnung",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "FK Parent id, Sel_SelektionscodeID",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selection codes / SelektionsCode"
      },
      "SellingPrice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "FK, Id of the article",
            "format": "int32"
          },
          "priceGroupId": {
            "type": "integer",
            "description": "FK, Id of the price group, VK_KGrpPreisID",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price, VK_Preis",
            "format": "double"
          },
          "promotionPrice": {
            "type": "number",
            "description": "Promotions price, VK_PreisAktion",
            "format": "double",
            "nullable": true
          },
          "promotionText": {
            "type": "string",
            "description": "Promotions text, VK_Aktionstext",
            "nullable": true
          },
          "isPromotion": {
            "type": "boolean",
            "description": "Is promotion, VK_IstAktion"
          },
          "priceValidFrom": {
            "type": "string",
            "description": "Unit price valid from, VK_VonDatum",
            "format": "date-time",
            "nullable": true
          },
          "priceValidUntil": {
            "type": "string",
            "description": "Unit price valid until, VK_BisDatum",
            "format": "date-time",
            "nullable": true
          },
          "promotionValidFrom": {
            "type": "string",
            "description": "Promotions price valid from, VK_DatumVon",
            "format": "date-time",
            "nullable": true
          },
          "promotionValidUntil": {
            "type": "string",
            "description": "Promotions price valid until, VK_DatumBis",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selling prices, VKPreis"
      },
      "SellingSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "fillingId": {
            "type": "integer",
            "description": "ID of filling",
            "format": "int32",
            "nullable": true
          },
          "setArticleId": {
            "type": "integer",
            "description": "ID of set article",
            "format": "int32"
          },
          "articleId": {
            "type": "integer",
            "description": "ID of article",
            "format": "int32"
          },
          "tradeUnitId": {
            "type": "integer",
            "description": "ID of trading unit",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "format": "double"
          },
          "amountTradingUnit": {
            "type": "integer",
            "description": "Amount trading unit",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Position",
            "format": "int32",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "description": "Percentage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Selling sets"
      },
      "StockInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "quantityAvailable": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Info to the current stock availability"
      },
      "StockLocationInfo": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "id of the article",
            "format": "int32"
          },
          "quantityAvailable": {
            "type": "number",
            "description": "available stock in base units of the article",
            "format": "double"
          },
          "quantityCurrent": {
            "type": "number",
            "description": "current quantity in base units of the article",
            "format": "double"
          },
          "warehouseId": {
            "type": "integer",
            "description": "warehouse id where the stock is located",
            "format": "int32"
          },
          "forShop": {
            "type": "boolean",
            "description": "authorized for the shop"
          }
        },
        "additionalProperties": false,
        "description": "Info about the current stock locations"
      },
      "TradingUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designationWeb": {
            "type": "string",
            "description": "Designation, Gross_BezeichnungWeb",
            "nullable": true
          },
          "shortNameWeb": {
            "type": "string",
            "description": "Short name web, Gross_KuerzelWeb",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "description": "Short name, Gross_Kuerzel",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term",
            "nullable": true
          },
          "splitUsageArticleId": {
            "type": "integer",
            "description": "FK Article ID for split usage, Gross_AnbruchArtikelID",
            "format": "int32",
            "nullable": true
          },
          "isSplitUsageAllowed": {
            "type": "boolean",
            "description": "If partial usage is allowed, Gross_AnbruchErlaubt"
          },
          "splitUsageQuantity": {
            "type": "integer",
            "description": "Minimum quantity of consumer units to avoid split fee, Gross_AnbruchMenge",
            "format": "int32",
            "nullable": true
          },
          "hasSplitUsageFee": {
            "type": "boolean",
            "description": "If split usage will have an extra fee, Gross_AnbruchZuschlag"
          },
          "articleId": {
            "type": "integer",
            "description": "FK ID of the article, Gross_ArtID",
            "format": "int32"
          },
          "minimalUnit": {
            "type": "number",
            "description": "Minimal ordering units, Gross_EinhMinimal",
            "format": "double",
            "nullable": true
          },
          "unitsPerTradingUnit": {
            "type": "number",
            "description": "Consumer unit per trading unit, Gross_EinhProGG",
            "format": "double",
            "nullable": true
          },
          "isFillingDepositIncluded": {
            "type": "boolean",
            "description": "If filling deposit is included, Gross_InklAbfDepot"
          },
          "isChargeable": {
            "type": "boolean",
            "description": "Is chargeable, Gross_Verrechenbar"
          }
        },
        "additionalProperties": false,
        "description": "Trading units, Grossgebinde"
      },
      "VatSummation": {
        "type": "object",
        "properties": {
          "applicableTaxRate": {
            "type": "number",
            "description": "applicable tax rate in percent, in-, output",
            "format": "double"
          },
          "taxBaseTotalAmount": {
            "type": "number",
            "description": "total base for taxes, output",
            "format": "double"
          },
          "taxTotalAmount": {
            "type": "number",
            "description": "total taxes amount, output",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "vat position of the basket, used in the vat summary"
      },
      "Wine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "description": "Unique designation",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "Search term",
            "nullable": true
          },
          "classificationId": {
            "type": "integer",
            "description": "ID of classification",
            "format": "int32",
            "nullable": true
          },
          "storagePeriod": {
            "type": "integer",
            "description": "Optimal storage period",
            "format": "int32",
            "nullable": true
          },
          "maximalStoragePeriod": {
            "type": "integer",
            "description": "Maximal storage period",
            "format": "int32",
            "nullable": true
          },
          "ratingPoints": {
            "type": "integer",
            "description": "Rating points",
            "format": "int32",
            "nullable": true
          },
          "drinkingTemperature": {
            "type": "integer",
            "description": "Optimal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "minimalDrinkingTemperature": {
            "type": "integer",
            "description": "Minimal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "maximalDrinkingTemperature": {
            "type": "integer",
            "description": "Maximal drinking temperature",
            "format": "int32",
            "nullable": true
          },
          "ratingTextRtf": {
            "type": "string",
            "description": "Rating text in Rtf",
            "nullable": true
          },
          "ratingText": {
            "type": "string",
            "description": "Rating text",
            "nullable": true,
            "readOnly": true
          },
          "consumptionAdviceRtf": {
            "type": "string",
            "description": "Consumption advice in Rtf",
            "nullable": true
          },
          "consumptionAdvice": {
            "type": "string",
            "description": "Consumption advice",
            "nullable": true,
            "readOnly": true
          },
          "vinificationRtf": {
            "type": "string",
            "description": "Vinification in Rtf",
            "nullable": true
          },
          "vinification": {
            "type": "string",
            "description": "Vinification",
            "nullable": true,
            "readOnly": true
          },
          "characteristicRtf": {
            "type": "string",
            "description": "Characteristic in Rtf",
            "nullable": true
          },
          "characteristic": {
            "type": "string",
            "description": "Characteristic",
            "nullable": true,
            "readOnly": true
          },
          "terroirRtf": {
            "type": "string",
            "description": "Terroir in Rtf",
            "nullable": true
          },
          "terroir": {
            "type": "string",
            "description": "Terroir",
            "nullable": true,
            "readOnly": true
          },
          "historyRtf": {
            "type": "string",
            "description": "History in Rtf",
            "nullable": true
          },
          "history": {
            "type": "string",
            "description": "History",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Wines"
      },
      "WineComposition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "wineId": {
            "type": "integer",
            "description": "FK wine id, ArtZus_WeininfoID",
            "format": "int32"
          },
          "grapeId": {
            "type": "integer",
            "description": "FK grape id, ArtZus_TraubensorteID",
            "format": "int32"
          },
          "proportion": {
            "type": "number",
            "description": "proportion (in percentages), ArtZus_Anteil",
            "format": "double",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "Sorting order, ArtZus_Position",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Wine compositions, ArtikelZusammensetzung"
      },
      "WineRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Primary key",
            "format": "int32"
          },
          "wineId": {
            "type": "integer",
            "description": "FK wine id",
            "format": "int32"
          },
          "ratingId": {
            "type": "integer",
            "description": "FK rating id",
            "format": "int32"
          },
          "points": {
            "type": "number",
            "description": "Rating points",
            "format": "double",
            "nullable": true
          },
          "ratingDate": {
            "type": "string",
            "description": "Rating date",
            "format": "date-time",
            "nullable": true
          },
          "ratingText": {
            "type": "string",
            "description": "Rating text",
            "nullable": true
          },
          "vintage": {
            "type": "integer",
            "description": "Vintage, ArtBew_Jahrgang",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Wine ratings, ArtikelBewertung"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}

2023-04-12 14:28:49.5029|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|Received GET request '0HMPRA5I57M86:00000008' to 'http://localhost:8085/api/v1.0/Core/VinX/Shop/BaseDataLad/ArticleLad?%24top=12 with 0 bytes of data of type Accept: application/json;odata.metadata=minimal;odata.streaming=true
Connection: keep-alive
Host: localhost:8085
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: en-GB,en
Referer: http://localhost:8085/swagger/index.html?urls.primaryName=I-AG%20Standard%20Shop%20API%201.0
sec-ch-ua: "Chromium";v="112", "Brave";v="112", "Not:A-Brand";v="99"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Sec-GPC: 1
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty

2023-04-12 14:28:49.5805|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL '
                SET TEMPORARY OPTION CONNECTION_AUTHENTICATION=
                'Company=Opus Software AG;Application=Atlas Framework;Signature=000fa55157edb8e14d818eb4fe3db41447146f1571g7b927fa0b2d30a756f0d29b8fd5e7a1b91124be6''
2023-04-12 14:28:49.7723|DEBUG|IAG.Common.DataLayerSybase.SybaseConnection|Execute SQL '
       WITH ArticleLad
        AS 
        (
        SELECT 
            DDProduct_ContentInfo               AS ContentInfo,
            DDProduct_NahrungsInfo              AS NutritionInfo,
            DDProduct_AllergenInfo              AS AllergenInfo,
            CASE DDProduct_NoNutritionInfo WHEN 0 THEN 0 ELSE 1 END AS NoNutritionInfo,
            Art_Artikelinfo                     AS ArticleInfo,

            Art_ID                              AS Id, 
            Art_Bezeichnung                     AS Designation,
            Art_Suchbegriff                     AS SearchTerm,
            TRIM(STR(Art_Artikelnummer, 20))    AS ArticleNumber,
            Art_AKatID                          AS ArticleCategoryId,
            Art_Artikeltyp                      AS ArticleType,
            Art_AbfID                           AS FillingUnitId,
            Art_GrossID                         AS TradingUnitId,
            MWST_Prozent                        AS VatPercentage,
            Art_LandID                          AS CountryId,
            Art_RegID                           AS RegionId,
            Art_ZyklusID                        AS ProductCycleId,
            Art_ProdID                          AS ProducerId,
            Art_Jahrgang                        AS Vintage,
            Art_WeininfoID                      AS WineId,
            Art_Volumen                         AS Volume,
            ABS(Art_Aktiv)                      AS IsActive,
            Art_EGruppeID                       AS ECommerceGroupId,
            Art_Preiseinheit                    AS PriceUnit,
            Art_Grundpreis                      AS BasePrice,
            Art_DatumErfassung                  AS CreatedDate,
            Art_DatumMutation                   AS ChangedOn,
            Art_ErsatzArtikelID                 AS SubstituteArticleId,
            Art_ErsatzArtikelText               AS SubstituteArticleText,
            Art_BildDatei                       AS PicturePathLocal,
            ABS(Art_MitLager)                   AS WithStock,
            Art_Gewichtsanteil                  AS Weight,
            CAST(Art_EAN1 AS BIGINT)            AS Ean1,
            CAST(Art_EAN2 AS BIGINT)            AS Ean2,
            CAST(Art_EAN3 AS BIGINT)            AS Ean3
        FROM Artikel
        LEFT JOIN MWST ON MWST_ID=Art_MWSTID
        LEFT JOIN DDBundle ON DDBundle_ID = Art_DDBundleID
        LEFT JOIN DDProduct ON DDProduct_ID = DDBundle_DDProductID 
        )
    SELECT TOP ? T.ContentInfo,T.NutritionInfo,T.AllergenInfo,T.NoNutritionInfo,T.ArticleInfo,T.Id,T.Designation,T.SearchTerm,T.ArticleNumber,T.ArticleCategoryId,T.ArticleType,T.FillingUnitId,T.TradingUnitId,T.VatPercentage,T.CountryId,T.RegionId,T.ProductCycleId,T.ProducerId,T.Vintage,T.WineId,T.Volume,T.IsActive,T.WithStock,T.ECommerceGroupId,T.PriceUnit,T.BasePrice,T.CreatedDate,T.ChangedOn,T.SubstituteArticleId,T.SubstituteArticleText,T.PicturePathLocal,T.Weight,T.Ean1,T.Ean2,T.Ean3
FROM ArticleLad T
' with parameters: 12
2023-04-12 14:28:49.8868|DEBUG|IAG.Infrastructure.Middleware.LoggingMiddleware|TraceIdentifier:http 0HMPRA5I57M86:00000008'OK' (200)
Response Body: [{"noNutritionInfo":true,"articleInfo":"Rabatt Code: 0","id":25,"designation":"Cristalp grün 6-Ha. PET 150 cl. N ","searchTerm":"Crigrü","articleNumber":"104701600000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":100,"tradingUnitId":14,"vatPercentage":2.5000,"productCycleId":2,"isActive":false,"withStock":true,"priceUnit":1.0000,"basePrice":2.0000,"createdDate":"2013-10-18T00:00:00","changedOn":"2014-12-30T00:00:00"},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 2","id":26,"designation":"Valser Prickelnd  Glas 33 cl.   ","searchTerm":"Valpri","articleNumber":"105000300000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":29,"tradingUnitId":21,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.5000,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-14T00:00:00","weight":0.6583,"ean1":7610335000441,"ean2":7610335000458},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 0","id":27,"designation":"Valser Prickelnd 24-PET 33 cl. N ","searchTerm":"Valpri","articleNumber":"105000500000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":27,"tradingUnitId":40,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"priceUnit":1.0000,"basePrice":1.6000,"createdDate":"2013-10-18T00:00:00","changedOn":"2018-09-26T00:00:00","weight":0.3592,"ean1":76404177,"ean2":7610335000014,"ean3":7610335003695},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 2","id":28,"designation":"Valser Prickelnd Glas 50 cl.   ","searchTerm":"Valpri","articleNumber":"105000510000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":51,"tradingUnitId":20,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.6000,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-14T00:00:00","weight":0.9110,"ean1":7610335000236,"ean2":7610335000243},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 0","id":29,"designation":"Valser Prickelnd 24-PET 50 cl. N","searchTerm":"Valpri","articleNumber":"105000520000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":49,"tradingUnitId":40,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.6500,"createdDate":"2013-10-18T00:00:00","changedOn":"2021-11-30T00:00:00","weight":0.5392,"ean1":76404160,"ean2":7610335000151},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 0","id":30,"designation":"Valser Prickelnd 4x6-PET 50 cl. N","searchTerm":"Valpri","articleNumber":"105000560000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":49,"tradingUnitId":40,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.6500,"createdDate":"2013-10-18T00:00:00","changedOn":"2021-11-30T00:00:00","weight":0.5429,"ean1":76404160,"ean2":7610335000175,"ean3":7610335000168},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 2","id":31,"designation":"Valser Prickelnd Glas 75 cl.   ","searchTerm":"Valpri","articleNumber":"105000700000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":67,"tradingUnitId":17,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"priceUnit":1.0000,"basePrice":1.8000,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-15T00:00:00","weight":1.3992,"ean1":7610335000489,"ean2":7610335000496},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 2","id":33,"designation":"Valser Prickelnd Glas 100 cl.   ","searchTerm":"Valpri","articleNumber":"105001000000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":75,"tradingUnitId":17,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.8500,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-16T00:00:00","weight":1.6392,"ean1":76404108,"ean2":7610335000229,"ean3":7610335002193},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 0","id":34,"designation":"Valser Prickelnd 6-Ha. PET 150 cl. N ","searchTerm":"Valpri","articleNumber":"105001500000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":154,"tradingUnitId":14,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":2.3000,"createdDate":"2013-10-18T00:00:00","changedOn":"2022-11-28T00:00:00","weight":1.7633,"ean1":7610335000069,"ean2":7610335000212},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 0","id":35,"designation":"Valser Prickelnd 6-PET 150 cl. N ","searchTerm":"Valpri","articleNumber":"105001600000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":165,"tradingUnitId":30,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":2.3000,"createdDate":"2013-10-18T00:00:00","changedOn":"2022-11-28T00:00:00","weight":1.5733,"ean1":7610335000069,"ean2":7610335000083},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"id":36,"designation":"Valser Prickelnd Cont. 20 Lt. N ","searchTerm":"Valpri","articleNumber":"105020000000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":134,"tradingUnitId":69,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":2.2500,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-16T00:00:00","weight":1.2705,"ean1":7610335000274},{"contentInfo":"Totalmineralisation: 1889 mg/l. Enteisent. Amtlich anerkannte Analyse vom 12.01.2016.","nutritionInfo":"","allergenInfo":"keine Allergene enthalten","noNutritionInfo":false,"articleInfo":"Rabatt Code: 2","id":37,"designation":"Valser Nature Glas 100 cl.   ","searchTerm":"Valnat","articleNumber":"106001000000","articleCategoryId":41,"articleType":"mineral","fillingUnitId":75,"tradingUnitId":17,"vatPercentage":2.5000,"countryId":1,"productCycleId":1,"producerId":6,"isActive":true,"withStock":true,"eCommerceGroupId":4,"priceUnit":1.0000,"basePrice":1.8500,"createdDate":"2013-10-18T00:00:00","changedOn":"2023-03-16T00:00:00","weight":1.6338,"ean1":76404115,"ean2":7610335000281,"ean3":7610335002285}]

